{"version":3,"sources":["app/context/shared-subjects.ts","app/shared/main-footer.tsx","icon.png","app/wigetds/logo.tsx","app/shared/main-nav.tsx","app/consts/literals.ts","app/wigetds/autofit-textarea.tsx","app/wigetds/json-path-guide.tsx","app/context/pref.ts","app/tool-blocks/json-formatter.tsx","app/libs/hooks/wasm-api.ts","app/libs/helpers.ts","app/tool-blocks/base64serde.tsx","app/tool-blocks/url-parser.tsx","app/consts/tool-sider-configs.tsx","app/libs/hooks/localstore.ts","app/shared/setting.tsx","app/shared/tools-sider.tsx","app/pages/main-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SharedSubjects","require","activeToolNode$","ReplaySubject","windowSizeChange$","tauri$","beEvent$","Subject","this","tauriAPI","window","__TAURI__","next","SharedSubjectContext","createContext","MainFooter","className","vertical","type","LogoComponent","content","href","style","textDecoration","spacing","align","src","logo","alt","Title","heading","MainNav","headerNode","Header","navFooter","Footer","position","size","onClick","open","icon","Computer","theme","fill","defaultOpenKeys","mode","userSelect","AutoFitTextArea","props","useObservableState","obs","cls","setCls","isLoading","loading","setLoading","useEffect","isOnError","length","console","debug","onChange","value","placeholder","ref","forwardedRef","bottom","paddingLeft","zIndex","AutoFitTextAreaWithRef","React","JsonPathGuide","overflowY","display","flexDirection","StoreItem","key","defaultValue","$","trim","toLowerCase","val","getValueFromStore","storeVal","JSON","stringify","localStorage","setItem","observer","subscribe","includes","getItem","innerValue","parse","undefined","e","Pref","darkModeEnabled","osName","toolsSiderCollapsed","jsonFormatterDefaultIndentSpace","instance","ErrorDisplay","input","errors","onFirstErrorRange","useState","errorTags","setErrorTags","ellipsePlaceHolderStart","tags","map","vErr","idx","errAtGreaterThan","Number","index_start","errHasLeftContent","index_end","startAt","endAt","errorHintText","slice","cursorPositionStart","cursorPositionEnd","visibility","padding","fontSize","description","JsonFormatterBlock","jsonIndentState","getInstance","jsonPathValue","setJsonPathValue","showJsonPathGuide","setShowJsonPathGuide","inputRef","useRef","jsonPathRef","copy","useClipboard","onSuccess","_","Toast","success","wasmAPI","from","changedInput","then","wasm","error","validate_json","code","setValidationErrors","changed","indent","setOutputJson","setOutput","inputValue","setInputValue","outputValue","setOutputValue","editorTheme","setEditorTheme","validationErrors","useMount","enabled","outObj","onInputChanged","onCopy","setRandomJson","inputVal","get_random_json","onCompressClicked","onIndentSelectionChanged","onClearClicked","isSidebarCollapsed","isTauriAppContext","Consumer","isTauri","visible","onCancel","gutter","span","height","disabled","width","Option","fullMode","bordered","closeIcon","_start","_end","lang","extensions","json","res","JSONPath","path","base64encode","str","encode","encodeURIComponent","btoa","base64decode","decode","atob","decodeURIComponent","formatNumber","n","fractionDigits","ns","toFixed","x","split","x1","x2","rgx","test","replace","arrayBufferToBase64","dView","arr1","Array","prototype","call","item","String","fromCharCode","join","saveBase64AsFile","base64","fileName","link","document","createElement","body","appendChild","setAttribute","download","click","removeChild","Base64Serde","search","location","params","URLSearchParams","set","setSearchParams","defaultTabIdx","setDefaultTabIdx","useSearchParams","searchParams","tabIndex","get","defaultActiveKey","activeKey","tab","itemKey","Base64SerdeStringBlockBlock","codingType","setCodingType","inValue","setInValue","outValue","setOutValue","setInputForm","justifyContent","alignItems","randSentence","paddingRight","v","target","valueOf","Base64SerdeImageBlockBlock","useContext","createImage","data","fileType","newImage","onerror","onInValueChanged","base64SourceType","setBase64SourceType","imgSize","setImageSize","setImgSrc","tag","a","blobSize","imgSrc","fetch","base64Response","blob","setImageBlobSize","imgTag","setImgTag","imgBlobSize","imgContainerRef","extractBase64","inData","matches","match","base64Data","base64String","originalImageResized","getElementById","imgContainer","current","removeExisting","id","onload","naturalWidth","naturalHeight","formatBytes","isLoadingFile","setIsLoadingFile","fileReaderRef","fillBase64FormFromFile","img","hidden","parentElement","tauri","dialog","filePath","invoke","invokeRes","sampleData","data1","evt","Blob","files","selectedFile","arrayBuffer","Uint8Array","finally","children","base64Raw","fileExt","catch","err","UrlParser","TabPane","Percentage","UrlParserBlock","d","query","parsedUrl","setParsedUrl","parsedUrlObj","parseUrl","Item","protocol","port","resource","pathname","user","hash","editable","ToolSiderConfigs","navItemProps","text","svg","CodeBrackets","node","PayCode","LinkOne","useLocalStore","saved","initial","Object","assign","GetStorageValue","setValue","EchooSettingsDefault","SettingsModal","onVisibleChange","settings","setSettings","shown","setShown","formRef","centered","footer","closable","keepDOM","bodyStyle","overflow","initValues","onValueChange","Setting","Text","Checkbox","noLabel","field","Magic","Select","label","IMac","ToolsSider","sharedSubsCtx","navRef","selectedItems","setSelectedItems","values","i","tools","setTools","keyword","filteredTools","filter","toUpperCase","filteredItemKeys","firstKey","setToolSearchKeyword","collapsed","hideSearchBar","sidebarCollapsed","setSideBarCollapsed","hide","navNode","findDOMNode","nodes","getElementsByClassName","toolItemKey","defaultKey","keys","toolSiderConfigs","k","setShowSettings","searchToolInputRef","hotkeyHandlers","SEARCH_TOOLS","useCallback","ke","focus","HeaderNode","showSettings","FooterNode","selectedKeys","multiple","items","isCollapsed","collapseButton","header","handlers","keyMap","onSelect","siderToolItem","log","MainPage","Layout","Content","sharedSubs","activeToolNode","setActiveToolNode","event","listen","Notification","showClose","isTauriApp","Sider","App","setIsTauri","sendEvent","innerWidth","innerHeight","addEventListener","t","enableDark","enable","hasAttribute","removeAttribute","mql","matchMedia","os","appDir","s","forEach","basename","Provider","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4c5b0c6.chunk.js","sourcesContent":["import {createContext, ReactNode} from \"react\";\nimport {ReplaySubject, Subject} from \"rxjs\";\n\nconst tauri = require(\"@tauri-apps/api\")\n\nclass SharedSubjects {\n    public activeToolNode$ = new ReplaySubject<ReactNode>(1);\n    // public toolsNavSearch$ = new ReplaySubject<string>(1)\n    public windowSizeChange$ = new ReplaySubject<[number, number]>(1)\n    // public toolMainContentSizeChanged$ = new ReplaySubject<[number, number]>(1)\n    // public toolContentWidthChanged$ = new ReplaySubject<number>(1)\n    // public toolContentHeightChanged$ = new ReplaySubject<number>(1)\n    public tauri$: ReplaySubject<typeof tauri>\n    public beEvent$: Subject<object> = new Subject<any>()\n\n    constructor() {\n        this.tauri$ = new ReplaySubject<typeof tauri | undefined>(1)\n\n        // @ts-ignore\n        const tauriAPI = window.__TAURI__\n        this.tauri$.next(tauriAPI)\n    }\n}\n\nexport const SharedSubjectContext = createContext(new SharedSubjects());\n","import {Space} from \"@douyinfe/semi-ui\";\nimport Text from \"@douyinfe/semi-ui/lib/es/typography/text\";\n\nexport const MainFooter = () => {\n    return <Space className='main-footer' vertical>\n        <Text type='tertiary'>Copyright © 2022 by <b>Kyle Huang</b></Text>\n    </Space>;\n};","export default __webpack_public_path__ + \"static/media/icon.719a6b8e.png\";","// @flow\nimport * as React from 'react';\nimport {Space, Tooltip, Typography} from \"@douyinfe/semi-ui\";\nimport \"./log.scss\"\nimport logo from \"../../icon.png\";\n\nexport const LogoComponent = () => {\n    return (\n        <Tooltip content={\"Utilities for developers\"}>\n            <a href=\"/\" style={{textDecoration: 'none'}}>\n                <Space spacing={10} align={\"center\"}>\n                    <img src={logo} alt='Utilities for developers'/>\n                    <Space spacing={5} align={\"baseline\"}>\n                        <Space spacing={3} align={\"baseline\"}>\n                            <Typography.Title heading={2} type={\"primary\"}>Echoo</Typography.Title>\n                            <Typography.Title heading={6} type={\"tertiary\"}>.app</Typography.Title>\n                        </Space>\n                    </Space>\n                </Space>\n            </a>\n        </Tooltip>\n    );\n};","import {IconGithubLogo} from \"@douyinfe/semi-icons\";\nimport {Button, Nav, Space, Tooltip} from \"@douyinfe/semi-ui\";\nimport \"./main-nav.scss\"\n\nimport {LogoComponent} from \"../wigetds/logo\";\nimport {GITHUB_HOMEPAGE, RELEASE_DOWNLOAD_PAGE} from \"../consts/literals\";\nimport {Computer} from \"@icon-park/react/es\";\n\nexport const MainNav = () => {\n\n    const onDownloadClicked = () => {\n        window.open(RELEASE_DOWNLOAD_PAGE, \"blank\",)\n    }\n\n    const onHomePageClicked = () => {\n        window.open(GITHUB_HOMEPAGE, \"blank\",)\n    }\n\n    const headerNode = <Nav.Header>\n        <LogoComponent/>\n    </Nav.Header>\n\n    const navFooter = <Nav.Footer>\n        <Space>\n            <Tooltip content='Offline desktop client'\n                     position='bottomLeft'>\n                <Button size={\"large\"} onClick={onDownloadClicked}\n                        icon={<Computer theme=\"outline\" size=\"21\" fill=\"var(--semi-color-primary)\"/>}/>\n            </Tooltip>\n            <Button size={\"large\"} icon={<IconGithubLogo size={\"extra-large\"} onClick={onHomePageClicked}\n            />}/>\n        </Space>\n    </Nav.Footer>\n\n    return (\n        <Nav defaultOpenKeys={[\"Home\"]} mode=\"horizontal\" style={{userSelect: \"none\"}}>\n            {headerNode}\n            {navFooter}\n        </Nav>\n    )\n};\n","export const GITHUB_HOMEPAGE = \"https://github.com/zsmatrix62/echoo-app\"\nexport const RELEASE_DOWNLOAD_PAGE = \"https://github.com/zsmatrix62/echoo-app/releases\"\n","import * as React from 'react';\nimport {ForwardedRef, Ref, useEffect} from 'react';\nimport {Spin, TextArea} from \"@douyinfe/semi-ui\";\nimport \"./autofit-textarea.scss\"\nimport {useObservableState} from \"observable-hooks\";\n\ntype Props = {\n    placeholder?: string\n    forwardedRef?: Ref<HTMLTextAreaElement>\n    value?: string,\n    onChange?: (val: string) => void,\n    isOnError?: Array<any>\n    isLoading?: boolean\n};\nconst AutoFitTextArea = (props: Props) => {\n    const [cls, setCls] = useObservableState<string>((obs) => {\n        return obs\n    }, \"text-area mod-normal\")\n\n    const [loading, setLoading] = useObservableState<boolean | undefined>(obs => {\n        return obs\n    }, props.isLoading)\n    useEffect(() => {\n        // eslint-disable-next-line no-self-compare\n        if (props.isOnError?.length ?? 0 > 0) {\n            console.debug('setting error selection color')\n            setCls(\"text-area mod-error\")\n        } else {\n            console.debug(\"reverting selection color\")\n            setCls(\"text-area mod-normal\")\n        }\n    }, [props.isOnError, setCls])\n\n    useEffect(() => {\n        setLoading(props.isLoading)\n    }, [props.isLoading, setLoading])\n    return (\n        <>\n            <TextArea\n                onChange={props.onChange}\n                value={props.value}\n                className={cls}\n                placeholder={props.placeholder}\n                ref={props.forwardedRef}>\n            </TextArea>\n            {\n                loading &&\n                <Spin style={{position: \"fixed\", bottom: 95, paddingLeft: 10, zIndex: 99}}/>\n            }\n        </>\n    );\n};\n\n\nexport const AutoFitTextAreaWithRef = React.forwardRef((props: Props, ref: ForwardedRef<HTMLTextAreaElement>) => {\n    return <AutoFitTextArea forwardedRef={ref} {...props}/>\n})","// @flow\nimport * as React from 'react';\nimport \"./json-path-guide.scss\"\nimport {Space} from \"@douyinfe/semi-ui\";\n\nexport const JsonPathGuide = () => {\n    return (\n        <Space style={{overflowY: \"scroll\", display: 'flex', flexDirection: \"column\"}}>\n            <>\n                <h2>Operators</h2>\n                <table>\n                    <thead>\n                    <tr>\n                        <th align=\"left\">Operator</th>\n                        <th align=\"left\">Description</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td align=\"left\"><code>$</code></td>\n                        <td align=\"left\">The root element to query. This starts all path expressions.</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>@</code></td>\n                        <td align=\"left\">The current node being processed by a filter predicate.</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>*</code></td>\n                        <td align=\"left\">Wildcard. Available anywhere a name or numeric are required.</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>..</code></td>\n                        <td align=\"left\">Deep scan. Available anywhere a name is required.</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>.&lt;name&gt;</code></td>\n                        <td align=\"left\">Dot-notated child</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>['&lt;name&gt;' (, '&lt;name&gt;')]</code></td>\n                        <td align=\"left\">Bracket-notated child or children</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>[&lt;number&gt; (, &lt;number&gt;)]</code></td>\n                        <td align=\"left\">Array index or indexes</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>[start:end]</code></td>\n                        <td align=\"left\">Array slice operator</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\"><code>[?(&lt;expression&gt;)]</code></td>\n                        <td align=\"left\">Filter expression. Expression must evaluate to a boolean value.</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </>\n            <>\n                <h2>Filter Operators</h2>\n                <table>\n                    <thead>\n                    <tr>\n                        <th align=\"left\">Operator</th>\n                        <th align=\"left\">Description</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td align=\"left\">==</td>\n                        <td align=\"left\">left is equal to right (note that 1 is not equal to '1')</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">!=</td>\n                        <td align=\"left\">left is not equal to right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">&lt;</td>\n                        <td align=\"left\">left is less than right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">&lt;=</td>\n                        <td align=\"left\">left is less or equal to right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">&gt;</td>\n                        <td align=\"left\">left is greater than right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">&gt;=</td>\n                        <td align=\"left\">left is greater than or equal to right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">=~</td>\n                        <td align=\"left\">left matches regular expression [?(@.name =~ /foo.*?/i)]</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">in</td>\n                        <td align=\"left\">left exists in right [?(@.size in ['S', 'M'])]</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">nin</td>\n                        <td align=\"left\">left does not exists in right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">subsetof</td>\n                        <td align=\"left\">left is a subset of right [?(@.sizes subsetof ['S', 'M', 'L'])]</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">anyof</td>\n                        <td align=\"left\">left has an intersection with right [?(@.sizes anyof ['M', 'L'])]</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">noneof</td>\n                        <td align=\"left\">left has no intersection with right [?(@.sizes noneof ['M', 'L'])]</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">size</td>\n                        <td align=\"left\">size of left (array or string) should match right</td>\n                    </tr>\n                    <tr>\n                        <td align=\"left\">empty</td>\n                        <td align=\"left\">left (array or string) should be empty</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </>\n        </Space>\n    );\n}","import {Observer, ReplaySubject, Subscribable, Unsubscribable} from \"rxjs\";\n\nclass StoreItem<T> implements Subscribable<T> {\n    public $: ReplaySubject<T> = new ReplaySubject<T>()\n\n    constructor(private readonly key: string, private defaultValue: T\n    ) {\n        // console.log(key, defaultValue)\n        this.key = this.key.trim().toLowerCase()\n        this.$.next(this.value)\n    }\n\n    public get value() {\n        let val = this.getValueFromStore();\n        console.debug(`read value from store: ${this.key} = ${val}`)\n        return val\n    }\n\n    public set value(value: T) {\n        let storeVal = JSON.stringify({value: value})\n        console.debug(`setting store item: ${this.key}=${storeVal}`)\n        localStorage.setItem(this.key, storeVal)\n        this.$.next(value)\n    }\n\n    public subscribe(observer: Partial<Observer<T>> | undefined): Unsubscribable {\n        return this.$.subscribe(observer)\n    }\n\n    public toggle() {\n        if ([\"Boolean\", \"boolean\"].includes(typeof this.value)) {\n            // @ts-ignore\n            this.value = !this.value;\n        }\n    }\n\n    private getValueFromStore(): T {\n        let value: string = localStorage.getItem(this.key) ?? '';\n        if (!value) {\n            return this.defaultValue\n        }\n        try {\n            let initial = JSON.parse(value);\n            let innerValue = initial[\"value\"]\n            if (innerValue === undefined) {\n                this.value = this.defaultValue\n                return this.defaultValue\n            }\n            return innerValue;\n        } catch (e) {\n            return this.defaultValue\n        }\n    }\n}\n\nexport class Pref {\n    private static instance: Pref\n\n    public darkModeEnabled = new StoreItem<boolean>(\"pref:dark-mode\", false)\n    public theme = new StoreItem<string>(\"pref:theme\", \"system\")\n    public osName = new StoreItem<string>(\"pref:os\", \"\")\n    public toolsSiderCollapsed = new StoreItem<boolean>(\"pref:sider-collapsed\", true)\n    public jsonFormatterDefaultIndentSpace = new StoreItem<number>(\"pref:json-formatter:default-indent-space\", 2)\n\n    public static getInstance(): Pref {\n        if (!Pref.instance) {\n            Pref.instance = new Pref();\n        }\n        return Pref.instance\n    }\n}\n\n\n","import {Banner, Button, Col, Input, Row, Select, SideSheet, Space, Toast} from \"@douyinfe/semi-ui\";\nimport \"./json-formatter.scss\"\nimport {IconArrowUp, IconCopy, IconHelpCircle, IconLayers} from \"@douyinfe/semi-icons\";\nimport * as React from \"react\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {useObservableState} from \"observable-hooks\";\nimport {useMount} from \"react-use\";\nimport {AutoFitTextAreaWithRef} from \"../wigetds/autofit-textarea\";\nimport Text from \"@douyinfe/semi-ui/lib/es/typography/text\";\nimport useClipboard from \"use-clipboard-hook\";\nimport {JSONPath} from \"jsonpath-plus\";\nimport {JsonPathGuide} from \"../wigetds/json-path-guide\";\nimport {Pref} from \"../context/pref\";\nimport {Record} from \"@icon-park/react\";\nimport {json} from \"@codemirror/lang-json\";\nimport ReactCodeMirror, {Extension} from \"@uiw/react-codemirror\";\nimport {isTauriAppContext} from \"../../App\";\nimport {useWasmAPI} from \"../libs/hooks/wasm-api\";\nimport {ValidationError} from \"wasm-api\";\n\nconst ErrorDisplay = ({input, errors, onFirstErrorRange}: {\n    input?: string,\n    errors: Array<ValidationError>,\n    onFirstErrorRange?: (start: number, end: number) => void\n}) => {\n    const [errorTags, setErrorTags] = useState<Array<JSX.Element>>([])\n    useEffect(() => {\n        if (errors.length === 0) {\n            return\n        }\n        if (!input) {\n            return\n        }\n\n        const prefixCount = 10;\n        const ellipsePlaceHolderStart = '... ';\n        const ellipsePlaceHolderEnd = ' ...';\n        let tags = errors.map((vErr, idx) => {\n\n            let errAtGreaterThan = Number(vErr.index_start) - prefixCount > 0\n            let errHasLeftContent = Number(vErr.index_end) + prefixCount < input.length\n\n            let startAt = errAtGreaterThan ? Number(vErr.index_start) - prefixCount : 0\n            let endAt = errHasLeftContent ? Number(vErr.index_end) + prefixCount : Number(vErr.index_end)\n\n            const errorHintText = `${errAtGreaterThan ? ellipsePlaceHolderStart : ''} ${input.slice(startAt, endAt)}${errHasLeftContent ? ellipsePlaceHolderEnd : ''}`\n\n            let cursorPositionStart = (errAtGreaterThan ? startAt - ellipsePlaceHolderStart.length : startAt)\n            let cursorPositionEnd = Number(vErr.index_start)\n\n            if (endAt === input.length) {\n                cursorPositionStart = endAt - errorHintText.length\n                cursorPositionEnd = endAt - 1\n            }\n\n            if (onFirstErrorRange) {\n                onFirstErrorRange!(startAt, endAt)\n            }\n\n            return (\n                <div key={idx}>\n                    <Space vertical align={\"start\"} spacing={10}>\n                        <Text type={'danger'}><code>{errorHintText}</code></Text>\n                        <Text type={'danger'}>\n                            <code style={{\n                                visibility: \"hidden\",\n                                padding: 0\n                            }}>{input.slice(cursorPositionStart, cursorPositionEnd)}</code><IconArrowUp/>\n                        </Text>\n                        <code><Text type='danger' style={{fontSize: 18}}>\n                            {vErr.description}</Text></code>\n                    </Space>\n                </div>\n            );\n        });\n        setErrorTags(tags)\n    }, [errors, input, onFirstErrorRange])\n    return (\n        <Space>\n            {errorTags}\n        </Space>\n    )\n}\n\n\nexport const JsonFormatterBlock = () => {\n    let inputPlaceholder = \"Enter your text, Drag/drop files, Right click to load file\";\n    const jsonIndentState = useObservableState<number>(Pref.getInstance().jsonFormatterDefaultIndentSpace.$)\n    const [jsonPathValue, setJsonPathValue] = useState<string>('')\n    const [showJsonPathGuide, setShowJsonPathGuide] = useState<boolean>(false)\n    const inputRef = useRef<HTMLTextAreaElement>(null)\n    const jsonPathRef = useRef<HTMLInputElement>(null)\n    const {copy} = useClipboard({\n        onSuccess: _ => {\n            Toast.success(\"JSON copied\",)\n        }\n    });\n\n    const wasmAPI = useWasmAPI()\n\n    const [inputValue, setInputValue] = useObservableState<string | undefined>((obs) => {\n        obs.subscribe((changedInput) => {\n            import('wasm-api').then(wasm => {\n                let error = wasm?.validate_json(changedInput!);\n                if (error) {\n                    if (error.code === \"E100\") {\n                        return\n                    }\n                    setValidationErrors([error]);\n                }\n            })\n        })\n\n        const setOutput = (changed: string) => {\n            Pref.getInstance().jsonFormatterDefaultIndentSpace.subscribe({\n                next: indent => {\n                    setValidationErrors([])\n                    setOutputJson(changed === '' ? \"{}\" : changed, indent)\n                }\n            })\n        }\n\n        obs.subscribe((changed) => {\n            setOutput(changed ?? '')\n        })\n        return obs\n    }, undefined)\n\n    const [outputValue, setOutputValue] = useObservableState<string | undefined>((obs) => {\n        return obs\n    }, undefined)\n\n    const [editorTheme, setEditorTheme] = useObservableState<string | undefined>((obs) => {\n        return obs\n    }, undefined)\n\n    const [validationErrors, setValidationErrors] = useObservableState<Array<any>>((obs) => {\n        return obs\n    }, [])\n\n    useMount(() => {\n        Pref.getInstance().darkModeEnabled.subscribe({\n            next: enabled => {\n                setEditorTheme(enabled ? \"dark\" : \"light\")\n            }\n        })\n\n    })\n\n    const setOutputJson = (val?: string, indent?: number | string) => {\n        let outObj = {}\n        let content = ''\n        try {\n            if (val) {\n                outObj = JSON.parse(val)\n                if (indent === 91) {\n                    indent = \"\\t\"\n                }\n                content = JSON.stringify(outObj, null, indent);\n            }\n        } catch (e) {\n\n        } finally {\n            setOutputValue(content)\n        }\n    }\n\n    const onInputChanged = (val: string) => {\n        setInputValue(val)\n        setJsonPathValue('')\n    }\n\n    const onCopy = () => {\n        copy(outputValue)\n    }\n\n    function setRandomJson() {\n        const inputVal = wasmAPI?.get_random_json();\n        setInputValue(inputVal)\n    }\n\n    function onCompressClicked() {\n        onIndentSelectionChanged(0)\n    }\n\n    function onClearClicked() {\n        setInputValue(\"\")\n    }\n\n\n    function onIndentSelectionChanged(value: string | number | any[] | Record<string, any> | undefined) {\n        const indent = value as number\n        console.debug(`setting output json as ${indent} spaces indent`)\n        setOutputJson(outputValue, indent)\n        Pref.getInstance().jsonFormatterDefaultIndentSpace.value = indent\n    }\n\n    const isSidebarCollapsed = useObservableState(Pref.getInstance().toolsSiderCollapsed.$)\n\n    // noinspection RequiredAttributes\n    return (\n        <isTauriAppContext.Consumer>\n            {(isTauri) => (\n                <Row className='json-formatter-container'>\n\n                    <SideSheet\n                        size={'large'}\n                        visible={showJsonPathGuide} onCancel={() => {\n                        setShowJsonPathGuide(false)\n                    }}>\n                        <JsonPathGuide/>\n                    </SideSheet>\n\n                    <Row className='json-formatter-container-child' gutter={10}>\n                        <Col span={9} className={`input-block ${isTauri ? 'mod-input-block-is-tauri' : ''}`}>\n                            <Row style={{padding: \"10px 0\"}}>\n                                <Space>\n                                    <Button onClick={setRandomJson}>Sample</Button>\n                                    <Button onClick={onClearClicked}>Clear</Button>\n                                </Space>\n                            </Row>\n                            <Row style={{height: \"100%\"}}>\n                                <AutoFitTextAreaWithRef\n                                    value={inputValue}\n                                    onChange={onInputChanged}\n                                    forwardedRef={inputRef}\n                                    isOnError={validationErrors}\n                                    placeholder={inputPlaceholder}\n                                />\n                            </Row>\n                        </Col>\n                        <Col span={15} className={`input-block ${isTauri ? 'mod-input-block-is-tauri' : ''}`}>\n                            <Row style={{padding: \"10px 0\", flexDirection: \"row-reverse\"}} type={\"flex\"}>\n                                <Space>\n                                    <Button disabled={!outputValue}\n                                            onClick={onCompressClicked} icon={<IconLayers/>}>Compress</Button>\n                                    <Select\n                                        disabled={!outputValue}\n                                        value={jsonIndentState}\n                                        defaultValue={jsonIndentState}\n                                        style={{width: 120}}\n                                        onChange={onIndentSelectionChanged}>\n                                        <Select.Option value={2}>2 spaces</Select.Option>\n                                        <Select.Option value={4}>4 spaces</Select.Option>\n                                        <Select.Option value={91}>1 tab</Select.Option>\n                                        <Select.Option value={0}>minified</Select.Option>\n                                    </Select>\n                                    <Button disabled={!outputValue}\n                                            onClick={onCopy} icon={<IconCopy/>}>Copy</Button>\n                                </Space>\n                            </Row>\n                            <Row className='cm-block'>\n                                {\n                                    validationErrors.length > 0 ?\n                                        <Banner\n                                            className='validation-error'\n                                            fullMode={false} type=\"danger\" bordered icon={null} closeIcon={null}\n                                            description={<ErrorDisplay\n                                                onFirstErrorRange={(_start, _end) => {\n                                                    // inputRef?.current?.setSelectionRange(start, end)\n                                                }\n                                                }\n                                                input={inputValue} errors={validationErrors}/>}\n                                        />\n                                        :\n                                        <Row className={`cm-block-group \n                                        ${isTauri ? 'mod-cm-in-tauri' : 'mod-cm-in-browser'}\n                                        ${isSidebarCollapsed ? 'mod-cm-sider-collapsed' : 'mod-cm-sider-expanded'}\n                                        `} type={\"flex\"} gutter={10}>\n                                            <Row>\n                                                <ReactCodeMirror\n                                                    value={outputValue}\n                                                    lang=\"json\"\n                                                    extensions={[json()]}\n                                                    theme={editorTheme! as 'light' | 'dark' | Extension}\n                                                />\n                                            </Row>\n                                            <Row>\n                                                <Space style={{width: \"100%\"}}>\n                                                    <Input type='text'\n                                                           disabled={!validationErrors || !outputValue}\n                                                           placeholder={\"JSON Path\"}\n                                                           ref={jsonPathRef}\n                                                           value={jsonPathValue}\n                                                           onChange={(val) => {\n                                                               setJsonPathValue(val)\n                                                               if (val) {\n                                                                   let res = JSONPath({\n                                                                           path: val,\n                                                                           json: JSON.parse(inputValue!)\n                                                                       }\n                                                                   )\n                                                                   setOutputJson(JSON.stringify(res), jsonIndentState)\n                                                               } else {\n                                                                   setInputValue(inputValue)\n                                                               }\n                                                           }}/>\n                                                    <Button\n                                                        icon={<IconHelpCircle/>}\n                                                        onClick={() => {\n                                                            setShowJsonPathGuide(true)\n                                                        }\n                                                        }/>\n                                                </Space>\n                                            </Row>\n                                        </Row>\n                                }\n                            </Row>\n                        </Col>\n                    </Row>\n                </Row>\n            )}\n\n        </isTauriAppContext.Consumer>\n\n\n    );\n};","import {useObservableState} from \"observable-hooks\";\nimport {from} from \"rxjs\";\n\nexport const useWasmAPI = () => {\n    return useObservableState(from(import('wasm-api')))\n}","import {RefObject} from \"react\";\nimport {findDOMNode} from \"react-dom\";\n\nexport function GetRefNodeSize(ref: RefObject<any>) {\n    const htmlNode = findDOMNode(ref.current) as HTMLElement\n    return [htmlNode.offsetWidth ?? 0, htmlNode.offsetHeight ?? 0]\n}\n\nexport function base64encode(str: string) {\n    let encode = encodeURIComponent(str)\n    return window.btoa(encode)\n}\n\nexport function base64decode(str: string) {\n    let decode = window.atob(str);\n    return decodeURIComponent(decode)\n}\n\nexport function findNodesByClassName<T extends HTMLElement>(parent: HTMLElement, className: string): Array<T> {\n    let nodes = parent.getElementsByClassName(className)\n    let returnVals: Array<T> = []\n    for (let nodesKey in nodes) {\n        let node = nodes[nodesKey];\n        if (node instanceof HTMLElement) {\n            returnVals.push(node as T)\n        }\n    }\n    return returnVals\n}\n\nexport function formatNumber(n: number, fractionDigits: number = 0) {\n    let ns = n.toFixed(fractionDigits) + '';\n    let x = ns.split('.');\n    let x1 = x[0];\n    let x2 = x.length > 1 ? '.' + x[1] : '';\n    let rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        // eslint-disable-next-line no-useless-concat\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n\nexport function base64ToArrayBuffer(base64: string) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\nexport function arrayBufferToBase64(dView: Uint8Array) {\n\n    const arr = Array.prototype.slice.call(dView); //Create a normal array\n\n    const arr1 = arr.map(function (item) {\n        return String.fromCharCode(item);    //Convert\n    });\n\n    return window.btoa(arr1.join(''));   //Form a string\n\n}\n\n\nexport function saveBase64AsFile(base64: string, fileName: string) {\n    const link = document.createElement(\"a\");\n    document.body.appendChild(link);\n    link.setAttribute(\"type\", \"hidden\");\n    link.href = \"data:text/plain;base64,\" + base64;\n    link.download = fileName;\n    link.click();\n    document.body.removeChild(link);\n}\n\nexport function getOS() {\n    return window.navigator.appName\n}","import * as React from 'react';\nimport {useContext, useRef, useState} from 'react';\nimport {Button, Radio, RadioGroup, Row, Space, TabPane, Tabs, Toast, Tooltip} from \"@douyinfe/semi-ui\";\nimport \"./base64serde.scss\"\nimport \"../shared/styles/h-layout.scss\"\nimport {IconArrowUp, IconCopy, IconDownload, IconFile, IconImage} from \"@douyinfe/semi-icons\";\nimport {AutoFitTextAreaWithRef} from \"../wigetds/autofit-textarea\";\nimport {useMount} from \"react-use\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {useObservableState} from \"observable-hooks\";\nimport useClipboard from \"use-clipboard-hook\";\nimport {arrayBufferToBase64, base64decode, base64encode, formatNumber, saveBase64AsFile} from \"../libs/helpers\";\nimport {randSentence} from \"@ngneat/falso\"\nimport Text from \"@douyinfe/semi-ui/lib/es/typography/text\";\nimport sampleData from \"../../assets/base64-img-sample.json\"\nimport {isTauriAppContext} from '../../App';\n\nexport const Base64Serde = () => {\n    // noinspection DuplicatedCode\n    const [defaultTabIdx, setDefaultTabIdx] = useObservableState<string>(\n        obs => {\n            obs.subscribe(idx => {\n                const search = window.location.search;\n                const params = new URLSearchParams(search);\n                params.set(\"tab\", idx)\n                setSearchParams(params)\n            })\n            return obs\n        },\n        \"1\")\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useMount(() => {\n        let tabIndex = searchParams.get(\"tab\")\n        if (tabIndex) {\n            setDefaultTabIdx(tabIndex);\n        }\n    })\n\n    return (\n\n        <isTauriAppContext.Consumer>\n            {\n                (isTauri) => (\n                    <Tabs defaultActiveKey={defaultTabIdx}\n                          activeKey={defaultTabIdx}\n                          onChange={(key) => {\n                              setDefaultTabIdx(key)\n                          }}\n                          className={`h-layout-container ${isTauri ? 'mod-is-tauri' : ''}`}\n                    >\n                        <TabPane tab={<span> <IconFile/> String </span>} itemKey=\"1\">\n                            <Base64SerdeStringBlockBlock/>\n                        </TabPane>\n                        <TabPane tab={<span> <IconImage/> Image </span>} itemKey=\"2\">\n                            <Base64SerdeImageBlockBlock/>\n                        </TabPane>\n                    </Tabs>\n                )\n            }\n        </isTauriAppContext.Consumer>\n    );\n};\n\nexport const Base64SerdeStringBlockBlock = () => {\n        const [codingType, setCodingType] = useState<number>(0)\n        const [inValue, setInValue] = useObservableState<String>(obs => {\n                return obs\n            }, ''\n        )\n        const [outValue, setOutValue] = useObservableState<String>(obs => {\n            return obs\n        }, '')\n        const {copy} = useClipboard({\n            onSuccess: (_) => {\n                Toast.success({\n                    content: `${codingType === 0 ? 'encoded' : 'decoded'} content copied`,\n                },)\n            }\n        });\n\n        const setInputForm = (value: string) => {\n            setInValue(value)\n            setOutValue(codingType === 0 ? base64encode(value) : base64decode(value))\n        }\n\n        const onGenSampleClicked = () => {\n            setInputForm(randSentence({length: 1})[0])\n        }\n\n        const onClearClicked = () => {\n            setInputForm(\"\")\n        }\n\n        const onCopy = () => {\n            copy(outValue.valueOf())\n        }\n\n        const onUseAsInputClicked = () => {\n            setOutValue(\"\");\n            setInValue(outValue)\n        }\n\n        return (\n            <Row className='h-layout-child-container' type={\"flex\"}>\n                <Row className={'h-layout-child'}>\n                    <Row type='flex' className='header' style={{justifyContent: \"space-between\", alignItems: \"center\"}}>\n                        <Space>\n                            <Button onClick={onGenSampleClicked}>Sample</Button>\n                            <Button onClick={onClearClicked} disabled={!inValue}>Clear</Button>\n                        </Space>\n                        <RadioGroup\n                            style={{paddingRight: 5}}\n                            defaultValue={codingType} value={codingType} onChange={(v) => {\n                            setCodingType(v.target.value as number)\n                            if (inValue !== '') {\n                                try {\n                                    setOutValue(codingType === 1 ? base64encode(inValue.valueOf()) : base64decode(inValue.valueOf()))\n                                } catch (e) {\n                                    setOutValue(\"\")\n                                } finally {\n                                }\n                            }\n                        }}>\n                            <Radio value={0}>Encode</Radio>\n                            <Radio value={1}>Decode</Radio>\n                        </RadioGroup>\n                    </Row>\n                    <Row className={'mod-section-content mod-no-footer'}>\n                        <AutoFitTextAreaWithRef value={inValue.valueOf()} onChange={(value) => {\n                            setInputForm(value)\n                        }}/>\n                    </Row>\n                </Row>\n                <Row className={'h-layout-child'}>\n                    <Row className='header'>\n                        <Space>\n                            <Button onClick={onCopy} disabled={outValue === ''} icon={<IconCopy/>}>Copy</Button>\n                            <Button onClick={onUseAsInputClicked} disabled={outValue === ''} icon={<IconArrowUp/>}>Use\n                                as input</Button>\n                        </Space>\n                    </Row>\n                    <Row className={'mod-section-content mod-no-footer'}>\n                        <AutoFitTextAreaWithRef value={outValue.valueOf()}/>\n                    </Row>\n                </Row>\n            </Row>\n        );\n    }\n;\n\n// noinspection JSUnusedGlobalSymbols\nexport const Base64SerdeImageBlockBlock = () => {\n    const isTauri = useContext(isTauriAppContext)\n    const createImage = (data: string, fileType = \"image/jpeg\") => {\n        let src = `data:${fileType};base64,`;\n        src += data\n        let newImage = document.createElement(\"img\");\n        newImage.src = src\n        newImage.onerror = function (_) {\n            newImage.src = \"\"\n        }\n        return newImage\n    }\n\n    const [base64SourceType, setBase64SourceType] = useObservableState<number>((obs) => {\n        obs.subscribe(_ => {\n            onInValueChanged(\"\")\n        })\n        return obs\n    }, 0)\n\n    const [imgSize, setImageSize] = useState<[number, number]>([0, 0])\n    const [, setImgSrc] = useObservableState<string>(obs => {\n        return obs\n    }, '')\n    const [imgTag, setImgTag] = useObservableState<HTMLImageElement | null>(obs => {\n        // calculate input base64 size\n        obs.subscribe(async tag => {\n            let blobSize = 0\n            if (tag) {\n                let src = \"\"\n                try {\n                    src = tag?.src\n                } catch (e) {\n                }\n                try {\n                    const imgSrc = src ?? \"\"\n                    setImgSrc(imgSrc)\n                    const base64Response = await fetch(imgSrc);\n                    blobSize = (await base64Response.blob()).size\n                } catch (e) {\n                    blobSize = 0\n                } finally {\n                }\n            }\n            setImageBlobSize(blobSize)\n        })\n        return obs\n    }, null)\n\n    const [imgBlobSize, setImageBlobSize] = useState<number>(0)\n\n    const [inValue, setInValue] = useObservableState<string>(obs => {\n        return obs\n    }, \"\")\n    const imgContainerRef = useRef<HTMLDivElement>(null)\n\n\n    const onGenSampleClicked = () => {\n        let data = sampleData.data\n        if (base64SourceType === 1) {\n            data = sampleData.data1\n        }\n        onInValueChanged(data);\n    }\n\n    const onClearClicked = () => {\n        onInValueChanged(\"\")\n    }\n\n    const extractBase64 = (inData: string) => {\n        if (!inData) {\n            return \"\"\n        }\n\n        // source in image tag\n        let matches = inData.match(/data:image\\/[^;]+;base64[^\"]+/igm);\n        if (matches && matches.length > 0) {\n            let fistMatch = matches[0]\n            let base64Data = fistMatch.split(\"base64,\")[1]\n            base64Data = base64Data.slice(0, base64Data.length);\n            return base64Data\n        }\n        return inData;\n    }\n\n    const onInValueChanged = (data: string, fileType: string = \"image/jpeg\") => {\n        setInValue(data);\n\n        // data might be raw base64 string, image html tag, or css url pattern\n        let base64String = extractBase64(data)\n\n        let originalImageResized = document.getElementById(\"created-img-resized\") as HTMLImageElement;\n\n        let imgContainer = imgContainerRef.current\n        const removeExisting = () => {\n            if (imgContainer && originalImageResized) {\n                imgContainer.removeChild(originalImageResized)\n                setImgTag(null)\n            }\n        }\n\n        removeExisting()\n\n        if (base64String === \"\") {\n            setImageSize([0, 0])\n            return\n        } else {\n            try {\n                originalImageResized = createImage(base64String, fileType);\n            } catch (e) {\n                setImageSize([0, 0])\n                return\n            } finally {\n\n            }\n            originalImageResized.id = \"created-img-resized\"\n            originalImageResized.onload = function () {\n                setImageSize([originalImageResized.naturalWidth, originalImageResized.naturalHeight])\n            }\n            if (imgContainer) {\n                imgContainer.appendChild(originalImageResized)\n                setImgTag(originalImageResized)\n            }\n        }\n    }\n\n    const formatBytes = (n: number) => {\n        if (n >= 1024 && n <= 1024 * 1024) {\n            return `${formatNumber(n / 1024, 2)} kB`\n        }\n        if (n >= 1024 * 1024) {\n            return `${formatNumber(n / (1024 * 1024), 2)} MB`\n        }\n\n        return `${formatNumber(n)} bytes`;\n    }\n\n    //<editor-fold desc=\"Read image from fs\">\n    const [isLoadingFile, setIsLoadingFile] = useState<boolean>(false)\n    const fileReaderRef = useRef<HTMLInputElement>(null)\n    const fillBase64FormFromFile = (data: Uint8Array, fileType: string = \"image/jpeg\") => {\n        const base64String = arrayBufferToBase64(data)\n\n        let img = createImage(base64String, fileType)\n        img.hidden = true\n        img.id = \"temp_img\"\n        if (base64SourceType === 0) {\n            onInValueChanged(base64String, fileType)\n        }\n        if (base64SourceType === 1) {\n            onInValueChanged(`<img src=\"${img.src}\" alt=\"\">`, fileType)\n        }\n\n        setIsLoadingFile(false)\n        img.parentElement?.removeChild(img)\n    }\n    const handelInputChange = () => {\n        if (fileReaderRef?.current?.files) {\n            const selectedFile = fileReaderRef!.current!.files![0];\n            setIsLoadingFile(true)\n            selectedFile.arrayBuffer().then((data) => {\n                fillBase64FormFromFile(new Uint8Array(data), selectedFile.type)\n            }).finally(\n                () => {\n                    setIsLoadingFile(false)\n                }\n            )\n        }\n    }\n\n    async function onLoadFileClicked() {\n        if (fileReaderRef.current) {\n            setIsLoadingFile(true)\n            if (isTauri) {\n                // @ts-ignore\n                const tauri = window.__TAURI__;\n                let filePath = await tauri.dialog.open();\n                if (filePath) {\n                    tauri.invoke(\"read_binary_file\", {\"path\": filePath}).then((invokeRes: [string, Uint8Array]) => {\n                        let data = invokeRes[1]\n                        fillBase64FormFromFile(data)\n                    });\n                }\n            } else {\n                fileReaderRef.current.click()\n            }\n            setIsLoadingFile(false)\n        }\n    }\n\n    //</editor-fold>\n\n    return (\n        <Row className='h-layout-child-container'>\n            <Row className='h-layout-child'>\n                <Space className='header'>\n                    <Space>\n                        <Button onClick={onGenSampleClicked}>Sample</Button>\n                        <Button onClick={onClearClicked} disabled={!inValue}>Clear</Button>\n                    </Space>\n                    <RadioGroup\n                        style={{paddingRight: 10}}\n                        defaultValue={base64SourceType} value={base64SourceType}\n                        onChange={(evt) => {\n                            setBase64SourceType(evt.target.value as number)\n                        }}>\n\n                        <Tooltip content={\"Raw base64 string\"}>\n                            <Radio value={0}>\n                                Raw String\n                            </Radio>\n                        </Tooltip>\n                        <Tooltip content={\"HTML/CSS containing base64 string\"}>\n                            <Radio value={1}>HTML / CSS</Radio>\n                        </Tooltip>\n                    </RadioGroup>\n                </Space>\n                <Row className='mod-section-content'>\n                    <AutoFitTextAreaWithRef value={inValue} onChange={(val) => {\n                        onInValueChanged(val)\n                    }}/>\n                </Row>\n                <Row className='footer'>\n                    <span style={{display: \"flex\", flexDirection: \"row-reverse\"}}>\n                        <Text><code>{formatBytes(new Blob([inValue]).size)}</code></Text>\n                    </span>\n                </Row>\n            </Row>\n            <Row className='h-layout-child'>\n                <Row className='header'>\n                    <Space>\n                        <input type={\"file\"} style={{display: \"none\"}} ref={fileReaderRef}\n                               onChange={handelInputChange}/>\n                        <Button loading={isLoadingFile} icon={<IconFile/>} children={\"Load File ...\"}\n                                onClick={onLoadFileClicked}/>\n                        <Button onClick={onClearClicked} disabled={!imgTag}>Clear</Button>\n                        <Button icon={<IconDownload/>} children={\"Save\"} disabled={!imgTag} onClick={async () => {\n                            const base64Raw = base64SourceType === 0 ? inValue : extractBase64(inValue);\n                            if (imgTag) {\n                                let fileExt: string\n                                fileExt = imgTag.src.split(\"image/\")[1].split(\";\")[0] ?? \"\"\n                                if (imgTag.src) {\n                                    if (isTauri) {\n                                        // @ts-ignore\n                                        let tauri = window.__TAURI__;\n                                        tauri.invoke(\"write_binary_file\", {\n                                            \"data\": base64Raw,\n                                            \"fileName\": `img.${fileExt}`\n                                        })\n                                            .catch((err: string) => {\n                                                Toast.error(err)\n                                            })\n                                    } else {\n\n                                        saveBase64AsFile(base64Raw, `img.${fileExt}`);\n                                    }\n                                }\n                            }\n                        }}/>\n                    </Space>\n                </Row>\n                <Row className='mod-section-content'>\n                    <div className='img-container' ref={imgContainerRef}/>\n                </Row>\n\n                <Row className='footer' style={{display: \"flex\", flexDirection: \"row-reverse\"}}>\n                    <Text><code>{imgSize.join(\"x\")} | {formatBytes(imgBlobSize)}</code></Text>\n                </Row>\n            </Row>\n        </Row>\n    );\n};\n","import * as React from 'react';\nimport {Button, Col, Descriptions, Row, Space, Tabs, Toast} from \"@douyinfe/semi-ui\";\nimport {useObservableState} from \"observable-hooks\";\nimport {useSearchParams} from \"react-router-dom\";\nimport {useMount} from \"react-use\";\nimport \"../shared/styles/h-layout.scss\";\nimport {isTauriAppContext} from '../../App';\nimport {Percentage} from \"@icon-park/react\";\nimport \"./url-parser.scss\";\nimport {AutoFitTextAreaWithRef} from \"../wigetds/autofit-textarea\";\nimport ReactCodeMirror, {Extension} from \"@uiw/react-codemirror\";\nimport {json} from \"@codemirror/lang-json\";\nimport {Pref} from \"../context/pref\";\nimport {IconCopy} from \"@douyinfe/semi-icons\";\nimport parseUrl from \"parse-url\";\nimport useClipboard from \"use-clipboard-hook\";\n\nexport const UrlParser = () => {\n    // noinspection DuplicatedCode\n    const [defaultTabIdx, setDefaultTabIdx] = useObservableState<string>(\n        obs => {\n            obs.subscribe(idx => {\n                const search = window.location.search;\n                const params = new URLSearchParams(search);\n                params.set(\"tab\", idx)\n                setSearchParams(params)\n            })\n            return obs\n        },\n        \"1\")\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useMount(() => {\n        let tabIndex = searchParams.get(\"tab\")\n        if (tabIndex) {\n            setDefaultTabIdx(tabIndex);\n        }\n    })\n\n    return (\n        <isTauriAppContext.Consumer>\n            {\n                (isTauri) => (\n                    <Tabs defaultActiveKey={defaultTabIdx} activeKey={defaultTabIdx}\n                          onChange={(key) => {\n                              setDefaultTabIdx(key)\n                          }}\n                          className={`h-layout-container ${isTauri ? 'mod-is-tauri' : ''}`}\n                    >\n                        <Tabs.TabPane tab={<Space><Percentage style={{height: 18}}/> <span>Parse</span> </Space>}\n                                      itemKey={\"1\"}>\n                            <UrlParserBlock/>\n                        </Tabs.TabPane>\n                        {/*<Tabs.TabPane tab={<Space><LinkTwo style={{height: 18}}/> <span>Encode/Decode</span> </Space>}*/}\n                        {/*              itemKey={\"2\"}>*/}\n                        {/*</Tabs.TabPane>*/}\n                    </Tabs>\n                )\n            }\n        </isTauriAppContext.Consumer>\n    );\n};\n\nexport const UrlParserBlock = () => {\n    const SAMPLE_URL = \"https://www.google.com:443/search?sxsrf=ALeKk03TpCS68ykjCqWWm7_5xDzmkdCBsw%3A1591797655810&ei=l-fgXsOCMcyl-Qaq8p6AAw&q=sample+long+query+string+url&oq=sample+long+query+string+url&gs_lcp=CgZwc3ktYWIQAzoECAAQRzoCCAA6BggAEBYQHjoICCEQFhAdEB46BAgjECc6BwgAEBQQhwI6BwgjELACECc6BAgAEA06CAgAEAgQDRAeOgoIABAIEA0QChAeUIcLWP4vYIAyaAFwAXgAgAF-iAHQC5IBAzkuNpgBAKABAaoBB2d3cy13aXo&sclient=psy-ab&ved=0ahUKEwiDqtCutPfpAhXMUt4KHSq5BzAQ4dUDCAw&uact=5&bb[]=1&bb[]=ab&&bb[]=x#some-hash\"\n\n    const [editorTheme, setEditorTheme] = useObservableState<string | undefined>((obs) => {\n        return obs\n    }, undefined)\n\n    useMount(() => {\n        Pref.getInstance().darkModeEnabled.subscribe({\n            next: enabled => {\n                setEditorTheme(enabled ? \"dark\" : \"light\")\n            }\n        })\n    })\n\n    const {copy} = useClipboard({\n        onSuccess: (_) => {\n            Toast.success({\n                content: `query content copied`,\n            },)\n        }\n    });\n\n    interface ParsedUrl {\n        protocols: string[];\n        protocol: string;\n        port?: string;\n        resource: string;\n        user: string;\n        pathname: string;\n        hash: string;\n        search: string;\n        href: string;\n        query: {\n            [key: string]: any;\n        }\n    }\n\n    const [parsedUrl, setParsedUrl] = useObservableState<ParsedUrl | null>(obs => {\n        obs.subscribe(d => {\n            if (!d) {\n                setOutValue(\"\")\n                return\n            }\n            setOutValue(JSON.stringify(d?.query ?? {}, null, \"\\t\"));\n        })\n        return obs\n    }, null)\n    const [outValue, setOutValue] = useObservableState<string>(obs => obs, \"\");\n    const [inValue, setInValue] = useObservableState<string>(obs => {\n        obs.subscribe(changed => {\n            if (!changed) {\n                setParsedUrl(null)\n                return\n            }\n            let parsedUrlObj = parseUrl(changed);\n            setParsedUrl(parsedUrlObj)\n        })\n        return obs\n    }, \"\")\n\n    return (\n        <Row className={'parser-block-container'}>\n            <Row className={\"url-input-container\"}>\n                <Row className=\"actions\">\n                    <Space>\n                        <Button onClick={() => {\n                            setInValue(SAMPLE_URL)\n                        }}>Sample</Button>\n                        <Button onClick={() => {\n                            setInValue(\"\")\n                        }}>Clear</Button>\n                    </Space>\n                </Row>\n                <Row className=\"url-input-element\">\n                    <AutoFitTextAreaWithRef\n                        value={inValue.valueOf()}\n                        onChange={(v) => {\n                            setInValue(v)\n                        }}\n                        placeholder=\"Input/Paste URL here ...\"/>\n                </Row>\n            </Row>\n            <Row className='output-container'>\n                <Col span={9} className=\"segments\">\n                    <Descriptions align={\"left\"} className=\"des\">\n                        <Descriptions.Item itemKey={\"Protocol\"}>{parsedUrl?.protocol ?? \" - \"}</Descriptions.Item>\n                        {\n                            parsedUrl?.port ?\n                                <Descriptions.Item\n                                    itemKey={\"Port\"}>{parsedUrl?.port ?? \" - \"}</Descriptions.Item> : <></>\n                        }\n                        <Descriptions.Item itemKey={\"Host\"}>{parsedUrl?.resource ?? \" - \"}</Descriptions.Item>\n                        <Descriptions.Item itemKey={\"Path\"}>{parsedUrl?.pathname ?? \" - \"}</Descriptions.Item>\n                        {\n                            parsedUrl?.user ?\n                                <Descriptions.Item\n                                    itemKey={\"User\"}>{parsedUrl?.user ?? \" - \"}</Descriptions.Item> : <></>\n                        }\n                        {\n                            parsedUrl?.hash ?\n                                <Descriptions.Item\n                                    itemKey={\"Hash\"}>{parsedUrl?.hash ?? \" - \"}</Descriptions.Item> : <></>\n                        }\n                        <Descriptions.Item itemKey={\"Query\"}\n                                           className={\"query\"}> {parsedUrl?.search ?? \" - \"} </Descriptions.Item>\n                    </Descriptions>\n                </Col>\n                <Col span={15} style={{paddingLeft: 10}}>\n                    <Row>\n                        <Button icon={<IconCopy/>} onClick={() => {\n                            copy(outValue)\n                        }} disabled={!outValue}>Copy</Button>\n                    </Row>\n                    <Row>\n                        <ReactCodeMirror\n                            editable={false}\n                            value={outValue}\n                            className=\"query-json\"\n                            lang=\"json\"\n                            extensions={[json()]}\n                            theme={editorTheme! as 'light' | 'dark' | Extension}\n                        />\n                    </Row>\n                </Col>\n            </Row>\n        </Row>\n    );\n};","import {NavItemProps} from \"@douyinfe/semi-ui/lib/es/navigation\";\nimport {CodeBrackets, LinkOne, PayCode} from \"@icon-park/react\";\nimport {ReactNode} from \"react\";\nimport {JsonFormatterBlock} from \"../tool-blocks/json-formatter\";\nimport {Icon} from \"@douyinfe/semi-ui\";\nimport {Base64Serde} from \"../tool-blocks/base64serde\";\nimport {UrlParser} from \"../tool-blocks/url-parser\";\n\ntype ToolSiderItem = {\n    navItemProps: NavItemProps;\n    node: ReactNode;\n};\n\nconst ToolSiderConfigs: { [key: string]: ToolSiderItem } = {\n    \"json-formatter\": {\n        navItemProps: {\n            itemKey: \"json-formatter\",\n            text: \"JSON Format/Validate\",\n            icon: <Icon svg={<CodeBrackets theme=\"outline\"/>}/>,\n        },\n        node: <JsonFormatterBlock/>,\n    },\n    \"base64-serde\": {\n        navItemProps: {\n            itemKey: \"base64-serde\",\n            text: \"Base64/Image Encode/Decode\",\n            icon: <Icon svg={<PayCode theme=\"outline\"/>}/>\n        },\n        node: <Base64Serde/>\n    },\n    \"url-parser\": {\n        navItemProps: {\n            itemKey: \"url-parser\",\n            text: \"URL Parser\",\n            icon: <Icon svg={<LinkOne theme=\"outline\"/>}/>\n        },\n        node: <UrlParser/>\n    },\n};\n\nexport default ToolSiderConfigs;\n","import {useEffect, useState} from \"react\";\n\nexport function GetStorageValue<T>(key: string, defaultValue: T) {\n    const saved = localStorage.getItem(key);\n    if (!saved) {\n        return defaultValue\n    }\n    try {\n        const initial = JSON.parse(saved);\n        Object.assign(defaultValue, initial)\n        return initial || defaultValue;\n    } catch (e) {\n        return defaultValue\n    }\n}\n\nexport const useLocalStore = function <T>(key: string, defaultValue: T) {\n    const [value, setValue] = useState<T>(GetStorageValue(key, defaultValue));\n\n    function f(val: T) {\n        localStorage.setItem(key, JSON.stringify(value))\n        setValue(val)\n    }\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value))\n    }, [key, value])\n\n    return [value, f]\n}","import * as React from 'react';\nimport {useEffect, useRef} from 'react';\nimport {Button, Col, Form, Modal, Row, Space, Typography} from \"@douyinfe/semi-ui\";\nimport Section from \"@douyinfe/semi-ui/lib/es/form/section\";\nimport {IMac, Magic, Setting} from \"@icon-park/react\";\nimport Text from \"@douyinfe/semi-ui/lib/es/typography/text\";\nimport {IconMoon, IconSun} from \"@douyinfe/semi-icons\";\nimport {useLocalStore} from \"../libs/hooks/localstore\";\nimport {useObservableState} from \"observable-hooks\";\nimport {Pref} from \"../context/pref\";\n\nexport type EchooSettings = {\n    \"general:share-analytics\": boolean\n    \"appearance:theme\": \"dark\" | \"light\" | \"system\"\n    \"updates:check-automatically\": boolean\n}\n\nexport const EchooSettingsDefault: EchooSettings = {\n    \"general:share-analytics\": true,\n    \"appearance:theme\": \"system\",\n    \"updates:check-automatically\": true\n}\n\ntype settingsModelProps = { visible: boolean, onVisibleChange: (v: boolean) => void }\nexport const SettingsModal = ({visible, onVisibleChange}: settingsModelProps) => {\n    const [settings, setSettings] = useLocalStore(\"settings\", EchooSettingsDefault)\n    const [shown, setShown] = useObservableState<boolean>(obs => {\n        obs.subscribe(shown => {\n            onVisibleChange(shown)\n        })\n        return obs\n    }, visible)\n\n    const formRef = useRef<Form>(null)\n\n    const onChangeOfAnyField = (v: any) => {\n        // @ts-ignore\n        setSettings(v)\n\n        let theme = v['appearance:theme'];\n        Pref.getInstance().theme.$.next(theme)\n    }\n\n    useEffect(() => {\n        setShown(visible)\n    }, [setShown, visible])\n\n\n    // noinspection RequiredAttributes\n    return (\n        <Modal centered visible={shown}\n               footer={\n                   <Button type={\"danger\"} onClick={() => {\n                       setShown(!shown)\n                   }}>Close</Button>\n               }\n               closable={false}\n               width={\"600px\"}\n               height={\"520px\"}\n               keepDOM={true}\n               bodyStyle={{overflow: 'auto', height: \"400px\", width: \"600px\"}}\n        >\n            <Form initValues={settings} ref={formRef} onValueChange={onChangeOfAnyField}\n                  style={{height: \"100%\"}}>\n                <Section\n                    text={<Space> <Setting size={28}/> <Typography.Text\n                        style={{fontSize: 18}}>General</Typography.Text>\n                    </Space>}>\n                    <Row>\n                        <Col span={12}>\n                            <Form.Checkbox disabled noLabel field=\"general:share-analytics\">\n                                Share anonymous data or analytics\n                            </Form.Checkbox>\n                        </Col>\n                    </Row>\n                </Section>\n                <Section text={<Space> <Magic size={28}/> <Typography.Text\n                    style={{fontSize: 18}}>Appearance</Typography.Text> </Space>}>\n                    <Row>\n                        <Col span={12}>\n                            <Space spacing={20}>\n                                <Text>Theme</Text>\n                                <Form.Select noLabel field={\"appearance:theme\"}>\n                                    <Form.Select.Option label={\n                                        <Space>\n                                            <IMac style={{height: 14}}/>\n                                            <span>System</span>\n                                        </Space>\n                                    } value={\"system\"}/>\n                                    <Form.Select.Option label={\n                                        <Space>\n                                            <IconMoon/>\n                                            <span>Dark</span>\n                                        </Space>\n                                    } value={\"dark\"}/>\n                                    <Form.Select.Option label={\n                                        <Space>\n                                            <IconSun/>\n                                            <span>Light</span>\n                                        </Space>\n                                    } value={\"light\"}/>\n                                </Form.Select>\n                            </Space>\n                        </Col>\n                    </Row>\n                </Section>\n                {/*{isTauri &&*/}\n                {/*    <Section text={<Space> <UpdateRotation size={28}/> <Typography.Text*/}\n                {/*        style={{fontSize: 18}}>Updates</Typography.Text> </Space>}>*/}\n\n                {/*        <Space>*/}\n                {/*            <Form.Checkbox noLabel field=\"updates:check-automatically\">*/}\n                {/*                Check for updates automatically*/}\n                {/*            </Form.Checkbox>*/}\n\n                {/*            <Tooltip content={\"Check now\"}>*/}\n                {/*                <Button icon={<IconSync/>} size={\"small\"}/>*/}\n                {/*            </Tooltip>*/}\n                {/*        </Space>*/}\n                {/*    </Section>*/}\n                {/*}*/}\n            </Form>\n        </Modal>\n    );\n};","import {Button, Input, Nav, Space} from \"@douyinfe/semi-ui\";\nimport {OnSelectedData} from \"@douyinfe/semi-ui/lib/es/navigation\";\nimport React, {useContext, useRef, useState} from \"react\";\nimport ToolSiderConfigs from \"../consts/tool-sider-configs\";\nimport toolSiderConfigs from \"../consts/tool-sider-configs\";\nimport {SharedSubjectContext} from \"../context/shared-subjects\";\nimport {useMount} from \"react-use\";\nimport {useSearchParams} from 'react-router-dom';\nimport \"./tools-sider.scss\"\nimport {useObservableState} from \"observable-hooks/dist/esm2015\";\nimport {GlobalHotKeys} from \"react-hotkeys\";\nimport {IconSetting, IconSidebar} from \"@douyinfe/semi-icons\";\nimport {findDOMNode} from \"react-dom\";\nimport {Pref} from \"../context/pref\";\nimport {SettingsModal} from \"./setting\";\n\nexport const ToolsSider = () => {\n    const sharedSubsCtx = useContext(SharedSubjectContext);\n    const navRef = useRef<Nav>(null)\n    const [selectedItems, setSelectedItems] = useObservableState<Array<string>>(obs => {\n        return obs\n    }, [\"json-formatter\"])\n    const [tools, setTools] = useObservableState((obs) => {\n        return obs\n    }, Object.values(ToolSiderConfigs).map((i) => {\n        return i.navItemProps;\n    }))\n\n    const [, setToolSearchKeyword] = useObservableState<string>(obs => {\n        obs.subscribe(keyword => {\n            let filteredTools = Object.values(ToolSiderConfigs).filter(i => {\n                return (i.navItemProps.text as string).toUpperCase().trim().includes(keyword.toUpperCase().trim())\n            }).map((i) => {\n                return i.navItemProps;\n            })\n            setTools(filteredTools)\n            let filteredItemKeys = filteredTools.map(i => {\n                return i.itemKey as string\n            });\n            if (filteredItemKeys.length >= 1) {\n                console.debug(`filtered tool item keys: ${filteredItemKeys}`);\n                let firstKey = filteredItemKeys[0]\n                console.debug(`filtered first key: ${firstKey}`)\n                setSelectedItems([firstKey])\n                // send first node to content\n                sharedSubsCtx.activeToolNode$.next(ToolSiderConfigs[firstKey].node);\n            }\n        })\n        return obs\n    }, \"\")\n\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [sidebarCollapsed, setSideBarCollapsed] = useObservableState<boolean>(obs => {\n        obs.subscribe(collapsed => {\n            Pref.getInstance().toolsSiderCollapsed.value = collapsed as boolean\n            hideSearchBar(collapsed)\n        })\n        return obs\n    }, Pref.getInstance().toolsSiderCollapsed.value);\n\n    const hideSearchBar = (hide: Boolean) => {\n        // if collapsed remove header blank from nav header which is\n        // <div class=\"semi-navigation-header semi-navigation-header-collapsed\"></div>\n        // the header left a blank because <GlobalHotKeys> is blocking the place\n        let navNode = findDOMNode(navRef.current) as Element\n        if (navNode) {\n            let nodes = navNode.getElementsByClassName(\"semi-navigation-header\")\n            if (nodes.length >= 0) {\n                let node = nodes.item(0) as HTMLElement\n                node!.style!.display = hide ? \"none\" : \"block\"\n            }\n        }\n    }\n\n    // handle events\n    const onSiderToolSelected = (data: OnSelectedData) => {\n        let siderToolItem = ToolSiderConfigs[data.itemKey];\n        if (siderToolItem) {\n            console.log(`tool <${data.itemKey}> activated`);\n            sharedSubsCtx.activeToolNode$.next(siderToolItem.node);\n            let itemKey = data.itemKey as string\n            setSelectedItems([itemKey])\n            setSearchParams({\"tk\": itemKey})\n        }\n    };\n\n    // const search = useLocation().search\n\n    // hooks\n    useMount(() => {\n        hideSearchBar(sidebarCollapsed)\n    })\n\n    useMount(() => {\n        const toolItemKey = searchParams.get(\"tk\")\n\n        // init tool node\n        // default show json-formatter\n        let defaultKey = selectedItems[0]\n        if (toolItemKey && Object.keys(toolSiderConfigs).map(k => {\n            return k.toUpperCase().trim()\n        }).includes(toolItemKey?.toUpperCase().trim())) {\n            defaultKey = toolItemKey.toLowerCase().trim()\n            setSelectedItems([defaultKey])\n        }\n        sharedSubsCtx.activeToolNode$.next(ToolSiderConfigs[defaultKey].node);\n    });\n\n    useMount(() => {\n        sharedSubsCtx.beEvent$.subscribe((evt: any) => {\n            if (evt[\"event\"] === \"open-settings\") {\n                setShowSettings(true)\n            }\n        })\n    })\n\n    //<editor-fold desc=\"Define hot keys\">\n    const searchToolInputRef = useRef<HTMLInputElement>(null)\n    const onFocusSearchTools = React.useCallback((ke: (KeyboardEvent | undefined)) => {\n        console.debug(\"hotkey invoked: focus search tools\", JSON.stringify(ke))\n        setSideBarCollapsed(false)\n        searchToolInputRef.current?.focus();\n    }, [setSideBarCollapsed])\n    const hotkeyHandlers = {\n        SEARCH_TOOLS: onFocusSearchTools\n    }\n    const keyMap = {\n        SEARCH_TOOLS: \"command+.\"\n    };\n    //</editor-fold>\n\n    const HeaderNode =\n        <Input ref={searchToolInputRef}\n               onChange={(value) => {\n                   setToolSearchKeyword(value)\n               }}\n               placeholder=\"Search by ⌘ + .\"/>\n\n\n    const [showSettings, setShowSettings] = useState(false)\n\n    const FooterNode = <Space vertical={sidebarCollapsed}>\n        <Button icon={<IconSidebar/>} onClick={() => {\n            if (sidebarCollapsed) {\n                setSideBarCollapsed(false);\n            } else {\n                setSideBarCollapsed(true)\n            }\n\n        }}/>\n        <Button icon={<IconSetting/>}\n                onClick={() => {\n                    setShowSettings(true)\n                }}/>\n    </Space>\n\n    return (\n        <>\n            <SettingsModal visible={showSettings} onVisibleChange={setShowSettings}/>\n            <Nav\n                ref={navRef}\n                selectedKeys={selectedItems}\n                multiple={false}\n                style={{}}\n                mode=\"vertical\"\n                items={tools}\n                isCollapsed={sidebarCollapsed as boolean}\n                footer={{\n                    collapseButton: true,\n                    children: FooterNode\n                }}\n                header={<GlobalHotKeys handlers={hotkeyHandlers}\n                                       keyMap={keyMap}>{!sidebarCollapsed ? HeaderNode : null}</GlobalHotKeys>}\n                onSelect={onSiderToolSelected}\n                className={'tools-sider'}\n            />\n        </>\n    );\n};\n","import {Layout, Notification} from \"@douyinfe/semi-ui\";\nimport Sider from \"@douyinfe/semi-ui/lib/es/layout/Sider\";\nimport {useObservableState} from \"observable-hooks\";\nimport React, {ReactNode, useContext, useEffect} from \"react\";\nimport {SharedSubjectContext} from \"../context/shared-subjects\";\nimport {MainFooter} from \"../shared/main-footer\";\nimport {MainNav} from \"../shared/main-nav\";\nimport {ToolsSider} from \"../shared/tools-sider\";\nimport {isTauriAppContext} from \"../../App\";\nimport \"./main-page.scss\"\n\n\nexport const MainPage = () => {\n    const {Header, Content} = Layout;\n    const sharedSubs = useContext(SharedSubjectContext);\n    const isTauri = useContext(isTauriAppContext)\n    const [activeToolNode, setActiveToolNode] =\n        useObservableState<ReactNode>((obs) => {\n            obs.subscribe((node) => {\n                console.debug(`active tool node set: ${node}`);\n            });\n            return obs;\n        }, null);\n\n    // hooks\n    useEffect(() => {\n        sharedSubs.activeToolNode$.subscribe((node) => {\n            console.debug(`activeToolNode$ received next: ${node}`);\n            setActiveToolNode(node);\n        });\n    }, [setActiveToolNode, sharedSubs]);\n\n    useEffect(() => {\n        if (isTauri) {\n            // @ts-ignore\n            let tauri = window.__TAURI__\n            tauri.event.listen(\"be-error\", (event: object) => {\n                // @ts-ignore\n                Notification.error({content: event[\"payload\"] as string, position: \"topRight\", showClose: false})\n            })\n\n            tauri.event.listen(\"be-success\", (event: object) => {\n                Notification.success({\n                    // @ts-ignore\n                    content: event[\"payload\"] as string,\n                    position: \"topRight\",\n                    showClose: false\n                })\n            })\n        }\n    }, [isTauri])\n\n    return (\n        <isTauriAppContext.Consumer>\n            {\n                (isTauriApp) => (\n                    <Layout className=\"main-layout\">\n\n                        {!isTauriApp && <Header> <MainNav/> </Header>}\n                        <Layout className=\"central-layout\">\n                            <Sider children={<ToolsSider/>}/>\n                            <Content children={activeToolNode}/>\n                        </Layout>\n                        {!isTauriApp &&\n                            <Layout.Footer className='main-footer-container'> <MainFooter/> </Layout.Footer>}\n                    </Layout>\n                )\n            }\n        </isTauriAppContext.Consumer>\n    );\n};\n","import {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport \"./App.scss\";\nimport {MainPage} from \"./app/pages/main-page\";\nimport {useMount} from \"react-use\";\nimport {createContext, useContext} from \"react\";\nimport {SharedSubjectContext} from \"./app/context/shared-subjects\";\nimport {useObservableState} from \"observable-hooks\";\nimport {Pref} from \"./app/context/pref\";\nimport {useLocalStore} from \"./app/libs/hooks/localstore\";\nimport {EchooSettings, EchooSettingsDefault} from \"./app/shared/setting\";\n\n\nexport const isTauriAppContext = createContext(false)\n\nfunction App() {\n    const sharedSubsCtx = useContext(SharedSubjectContext)\n    // const appEnvs = useContext(AppEnvsContext)\n    const [isTauri, setIsTauri] = useObservableState((obs) => {\n        return obs\n    }, false)\n\n\n    // hooks\n    // listen window resize events\n    useMount(() => {\n        const sendEvent = () => {\n            sharedSubsCtx.windowSizeChange$.next([window.innerWidth ?? 0, window.innerHeight ?? 0])\n        }\n        window.addEventListener(\"resize\", () => {\n            sendEvent()\n        })\n        sendEvent()\n    })\n\n    // check is in tauri client or not\n    useMount(() => {\n        sharedSubsCtx.tauri$.subscribe(t => {\n            if (t) {\n                setIsTauri(true)\n            } else {\n                setIsTauri(false)\n            }\n        })\n    })\n\n    const [settings,] = useLocalStore<EchooSettings>(\"settings\", EchooSettingsDefault)\n\n    // subscribe dark mode\n    useMount(() => {\n        function enableDark(enable: boolean) {\n            const body = document.body;\n            if (enable) {\n                body.setAttribute('theme-mode', 'dark');\n            } else {\n                if (body.hasAttribute('theme-mode')) {\n                    body.removeAttribute('theme-mode');\n                }\n            }\n            Pref.getInstance().darkModeEnabled.$.next(enable)\n        }\n\n        // @ts-ignore\n        Pref.getInstance().theme.$.next(settings[\"appearance:theme\"] as string)\n        Pref.getInstance().theme.subscribe(\n            {\n                next: theme => {\n                    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n                    switch (theme) {\n                        case \"dark\":\n                            enableDark(true)\n                            break\n                        case \"light\":\n                            enableDark(false)\n                            break\n                        default:\n                            enableDark(mql.matches)\n                            mql.addEventListener(\"change\", (e) => {\n                                enableDark(e.matches)\n                            })\n                    }\n                }\n            }\n        )\n    })\n\n    useMount(() => {\n        // @ts-ignore\n        let tauri = window.__TAURI__;\n        if (tauri) {\n            tauri.invoke(\"get_system\", {}).then((os: string) => {\n                Pref.getInstance().osName.value = os\n            });\n            tauri.path.appDir().then((s: any) => {\n                console.log(s)\n            });\n            [\"open-settings\", \"open-about\", \"open-help\"].forEach(evt => {\n                tauri.event.listen(evt, (event: object) => {\n                    sharedSubsCtx.beEvent$.next(event)\n                })\n            })\n        }\n    })\n\n    return <BrowserRouter basename={\"echoo-app\"}>\n        <isTauriAppContext.Provider value={isTauri}>\n            <Routes>\n                <Route path=\"/\" element={<MainPage/>}> </Route>\n            </Routes>\n        </isTauriAppContext.Provider>\n    </BrowserRouter>\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}